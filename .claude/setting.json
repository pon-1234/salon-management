{
  "permissions": {
    "allow": [
      "Bash(pnpm install:*)",
      "Bash(pnpm dev:*)",
      "Bash(pnpm build:*)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm vitest:*)",
      "Bash(pnpm prettier:*)",
      "Bash(npx tsc:*)",
      "Bash(npx coverage-check:*)",
      "Bash(ls:*)",
      "Bash(grep:*)",
      "Bash(rg:*)",
      "Bash(find:*)",
      "Bash(cat:*)",
      "Write",
      "Edit",
      "MultiEdit",
      "Read",
      "Glob"
    ],
    "deny": ["Bash(git push:*)", "Bash(git commit:*)", "Bash(rm:*)", "Bash(mv:*)"]
  },
  "enableAllProjectMcpServers": false,
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "JSON=$(cat) && FILES=$(echo \"$JSON\" | jq -r 'if .tool_name==\"MultiEdit\" then .tool_input.changes[].file_path elif .tool_input.file_path? then .tool_input.file_path else empty end') && for FILE in $FILES; do case \"$FILE\" in *.spec.ts|*.spec.tsx|*.test.ts|*.test.tsx) pnpm vitest run --related \"$FILE\" ;; *.ts|*.tsx) pnpm prettier --write \"$FILE\" && pnpm eslint --fix \"$FILE\" ;; esac; done",
            "blocking": false,
            "timeout": 120
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "echo 'Running final checks...' && pnpm lint && pnpm typecheck && pnpm vitest run",
            "blocking": true,
            "timeout": 300
          },
          {
            "type": "command",
            "command": "pnpm vitest run --coverage",
            "blocking": false
          },
          {
            "type": "command",
            "command": "npx coverage-check --statements 5 --branches 5 --functions 5 --lines 5",
            "blocking": true
          }
        ]
      }
    ]
  }
}
